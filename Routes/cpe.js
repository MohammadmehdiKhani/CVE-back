const Joi = require("joi");
const { User } = require("../models/user");
const { CVE } = require("../models/cve");
const { Program } = require("../models/program");
const mongoose = require("mongoose");
const express = require("express");
const router = express.Router();
const auth = require("../middleware/auth.js");
var ObjectId = mongoose.Types.ObjectId;
const axios = require("axios");

router.get("/", async (req, res) => {
  const keyWord = req.query.keyWord;
  console.log(`req has recived form react with id: ${keyWord}`);
  const data = await axios.get(
    `https://services.nvd.nist.gov/rest/json/cpes/2.0?keywordSearch=${keyWord}`
  );

  res.send(data.data);
});

router.post("/", auth, async (req, res) => {
  const user = await User.findById(req.user._id).select("-password");
  let programsClone = [...user.userPrograms];

  let currentProgram = await Program.findOne({ cpeName: req.body.cpeName });
  console.log(currentProgram);

  if (!currentProgram) {
    console.log("inside if block");
    console.log(req.body);

    const newProgram = new Program({
      cpeName: req.body.cpeName,
      cpeId: req.body.cpeId,
      title: req.body.title,
      newCVEs: [],
      // --> go and find its new CVEs
    });

    await newProgram.save();
    currentProgram = newProgram;
  }

  //const programObjectId = new ObjectId(currentProgram._id);

  if (programsClone.length > 0)
    programsClone = programsClone.filter(
      (p) => p.toString() === currentProgram._id.toString()
    );
  if (programsClone.length > 0)
    return res.status(401).send({ error: "This program is already added" });

  /*
  ...
  getting new CVEs for this choosen program
  ...
  */

  user.userPrograms.push(currentProgram._id);
  user.save();
  res.send(user);
});

module.exports = router;
