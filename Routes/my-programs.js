const Joi = require("joi");
const { User } = require("../models/user");
const { Program } = require("../models/program");
const mongoose = require("mongoose");
const express = require("express");
const router = express.Router();
const auth = require("../middleware/auth.js");
var ObjectId = mongoose.Types.ObjectId;

router.post("/", auth, async (req, res) => {
  const user = await User.findById(req.user._id).select("-password");
  let programsClone = [...user.programs];
  programsClone = programsClone.filter((p) => p.toString() === req.body.id);
  if (programsClone.length > 0)
    return res.status(401).send({ error: "This program is already added" });
  //const programObjectId = mongoose.Types.ObjectId(req.body.id);
  user.programs.push(req.body.id);
  user.save();
  res.send(user);
});

router.get("/", auth, async (req, res) => {
  const user = await User.findById(req.user._id)
    .select("-password")
    .populate("programs");
  res.send(user);
});

router.delete("/", auth, async (req, res) => {
  const objectId = new ObjectId(req.body.id);
  const user = await User.findById(req.user._id).select("-password");

  let programsClone = [...user.programs];
  programsClone = programsClone.filter((p) => !(p.toString() === req.body.id));

  user.programs = programsClone;

  user.save();

  res.send("goh");
});

module.exports = router;
